/*
Deployment script for tirc-data

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "tirc-data"
:setvar DefaultFilePrefix "tirc-data"
:setvar DefaultDataPath "C:\Users\stella\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\stella\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [ROWM].[ContactInfo].[DoNotCallCellPhone] on table [ROWM].[ContactInfo] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [ROWM].[ContactInfo].[DoNotCallHomePhone] on table [ROWM].[ContactInfo] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [ROWM].[ContactInfo].[DoNotCallWorkPhone] on table [ROWM].[ContactInfo] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [ROWM].[ContactInfo].[DoNotEmail] on table [ROWM].[ContactInfo] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [ROWM].[ContactInfo].[DoNotLetter] on table [ROWM].[ContactInfo] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [ROWM].[ContactInfo])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [ROWM].[Parcel_Status].[Category] on table [ROWM].[Parcel_Status] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [ROWM].[Parcel_Status])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Default Constraint unnamed constraint on [ROWM].[RoeConditions]...';


GO
ALTER TABLE [ROWM].[RoeConditions] DROP CONSTRAINT [DF__RoeCondit__Condi__2180FB33];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [ROWM].[ContactInfo]...';


GO
ALTER TABLE [ROWM].[ContactInfo] DROP CONSTRAINT [DF__ContactIn__IsDel__2FCF1A8A];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [ROWM].[ContactLog]...';


GO
ALTER TABLE [ROWM].[ContactLog] DROP CONSTRAINT [DF__ContactLo__IsDel__2CF2ADDF];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [ROWM].[Document]...';


GO
ALTER TABLE [ROWM].[Document] DROP CONSTRAINT [DF__Document__IsDele__2DE6D218];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.ContactLog_ROWM.Agent_ContactAgentId]...';


GO
ALTER TABLE [ROWM].[ContactLog] DROP CONSTRAINT [FK_ROWM.ContactLog_ROWM.Agent_ContactAgentId];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.DocumentActivity_ROWM.Agent_AgentId]...';


GO
ALTER TABLE [ROWM].[DocumentActivity] DROP CONSTRAINT [FK_ROWM.DocumentActivity_ROWM.Agent_AgentId];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.DocumentAgents_ROWM.Agent_Agent_AgentId]...';


GO
ALTER TABLE [ROWM].[DocumentAgents] DROP CONSTRAINT [FK_ROWM.DocumentAgents_ROWM.Agent_Agent_AgentId];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.Contact_Purpose_ROWM.Parcel_Status_MilestoneCode]...';


GO
ALTER TABLE [ROWM].[Contact_Purpose] DROP CONSTRAINT [FK_ROWM.Contact_Purpose_ROWM.Parcel_Status_MilestoneCode];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.Parcel_ROWM.Parcel_Status_ParcelStatusCode]...';


GO
ALTER TABLE [ROWM].[Parcel] DROP CONSTRAINT [FK_ROWM.Parcel_ROWM.Parcel_Status_ParcelStatusCode];


GO
PRINT N'Dropping Foreign Key [ROWM].[FK_ROWM.Document_Type_ROWM.Parcel_Status_MilestoneCode]...';


GO
ALTER TABLE [ROWM].[Document_Type] DROP CONSTRAINT [FK_ROWM.Document_Type_ROWM.Parcel_Status_MilestoneCode];


GO
PRINT N'Creating Schema [Austin]...';


GO
CREATE SCHEMA [Austin]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating Schema [SH72]...';


GO
CREATE SCHEMA [SH72]
    AUTHORIZATION [dbo];


GO
PRINT N'Starting rebuilding table [ROWM].[Agent]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [ROWM].[tmp_ms_xx_Agent] (
    [AgentId]      UNIQUEIDENTIFIER   CONSTRAINT [DF_Agent_AgentId] DEFAULT (newid()) ROWGUIDCOL NOT NULL,
    [AgentName]    NVARCHAR (20)      NOT NULL,
    [Created]      DATETIMEOFFSET (7) NOT NULL,
    [LastModified] DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]   NVARCHAR (50)      NULL,
    [IsActive]     BIT                NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ROWM.Agent1] PRIMARY KEY CLUSTERED ([AgentId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [ROWM].[Agent])
    BEGIN
        INSERT INTO [ROWM].[tmp_ms_xx_Agent] ([AgentId], [AgentName], [Created], [LastModified], [ModifiedBy], [IsActive])
        SELECT   [AgentId],
                 [AgentName],
                 [Created],
                 [LastModified],
                 [ModifiedBy],
                 [IsActive]
        FROM     [ROWM].[Agent]
        ORDER BY [AgentId] ASC;
    END

DROP TABLE [ROWM].[Agent];

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_Agent]', N'Agent';

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_constraint_PK_ROWM.Agent1]', N'PK_ROWM.Agent', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [ROWM].[Contact_Purpose]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [ROWM].[tmp_ms_xx_Contact_Purpose] (
    [PurposeCode]   NVARCHAR (50) NOT NULL,
    [Description]   NVARCHAR (50) NOT NULL,
    [DisplayOrder]  INT           NOT NULL,
    [IsActive]      BIT           NOT NULL,
    [MilestoneCode] NVARCHAR (40) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ROWM.Contact_Purpose1] PRIMARY KEY CLUSTERED ([PurposeCode] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [ROWM].[Contact_Purpose])
    BEGIN
        INSERT INTO [ROWM].[tmp_ms_xx_Contact_Purpose] ([PurposeCode], [Description], [DisplayOrder], [IsActive], [MilestoneCode])
        SELECT   [PurposeCode],
                 [Description],
                 [DisplayOrder],
                 [IsActive],
                 [MilestoneCode]
        FROM     [ROWM].[Contact_Purpose]
        ORDER BY [PurposeCode] ASC;
    END

DROP TABLE [ROWM].[Contact_Purpose];

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_Contact_Purpose]', N'Contact_Purpose';

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_constraint_PK_ROWM.Contact_Purpose1]', N'PK_ROWM.Contact_Purpose', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [ROWM].[Contact_Purpose].[IX_MilestoneCode]...';


GO
CREATE NONCLUSTERED INDEX [IX_MilestoneCode]
    ON [ROWM].[Contact_Purpose]([MilestoneCode] ASC);


GO
PRINT N'Altering Table [ROWM].[ContactInfo]...';


GO
ALTER TABLE [ROWM].[ContactInfo]
    ADD [DoNotEmail]           BIT           NOT NULL DEFAULT(0),
        [DoNotLetter]          BIT           NOT NULL DEFAULT(0),
        [DoNotCallHomePhone]   BIT           NOT NULL DEFAULT(0),
        [DoNotCallWorkPhone]   BIT           NOT NULL DEFAULT(0),
        [DoNotCallCellPhone]   BIT           NOT NULL DEFAULT(0),
        [PreferredContactMode] NVARCHAR (10) NULL;


GO
PRINT N'Altering Table [ROWM].[ContactLog]...';


GO
ALTER TABLE [ROWM].[ContactLog] ALTER COLUMN [ProjectPhase] NVARCHAR (50) NULL;


GO
PRINT N'Altering Table [ROWM].[Document]...';


GO
ALTER TABLE [ROWM].[Document] ALTER COLUMN [DocumentType] NVARCHAR (200) NULL;


GO
PRINT N'Altering Table [ROWM].[Parcel]...';


GO
ALTER TABLE [ROWM].[Parcel]
    ADD [OutreachStatusCode] NVARCHAR (40) NULL;


GO
PRINT N'Starting rebuilding table [ROWM].[Parcel_Status]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [ROWM].[tmp_ms_xx_Parcel_Status] (
    [Code]             NVARCHAR (40)  NOT NULL,
    [DomainValue]      INT            NOT NULL,
    [Category]         VARCHAR (50)   NOT NULL DEFAULT('NA'),
    [Description]      NVARCHAR (200) NULL,
    [DisplayOrder]     INT            NOT NULL,
    [IsActive]         BIT            NOT NULL,
    [IsComplete]       BIT            NULL,
    [IsAbort]          BIT            NULL,
    [ParentStatusCode] NVARCHAR (40)  NULL,
    [IsRequired]       BIT            NULL,
    [IsComputed]       BIT            NULL,
    [ShowInPie]        BIT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ROWM.Parcel_Status1] PRIMARY KEY CLUSTERED ([Code] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [ROWM].[Parcel_Status])
    BEGIN
        INSERT INTO [ROWM].[tmp_ms_xx_Parcel_Status] ([Code], [DomainValue], [Description], [DisplayOrder], [IsActive])
        SELECT   [Code],
                 [DomainValue],
                 [Description],
                 [DisplayOrder],
                 [IsActive]
        FROM     [ROWM].[Parcel_Status]
        ORDER BY [Code] ASC;
    END

DROP TABLE [ROWM].[Parcel_Status];

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_Parcel_Status]', N'Parcel_Status';

EXECUTE sp_rename N'[ROWM].[tmp_ms_xx_constraint_PK_ROWM.Parcel_Status1]', N'PK_ROWM.Parcel_Status', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Table [ROWM].[RoeConditions]...';


GO
ALTER TABLE [ROWM].[RoeConditions]
    ADD [Contact] UNIQUEIDENTIFIER NULL;


GO
PRINT N'Creating Table [Austin].[Document_Title_Picklist]...';


GO
CREATE TABLE [Austin].[Document_Title_Picklist] (
    [Title_Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Document_Type]  NVARCHAR (MAX) NOT NULL,
    [Document_Title] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_Document_Title_Picklist] PRIMARY KEY CLUSTERED ([Title_Id] ASC)
);


GO
PRINT N'Creating Table [Austin].[Parcel_Relocation]...';


GO
CREATE TABLE [Austin].[Parcel_Relocation] (
    [ParcelRelocationId] UNIQUEIDENTIFIER   NOT NULL,
    [ParcelId]           UNIQUEIDENTIFIER   NOT NULL,
    [Created]            DATETIMEOFFSET (7) NOT NULL,
    [LastModified]       DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]         NVARCHAR (50)      NULL,
    CONSTRAINT [PK_Austin.Parcel_Relocation] PRIMARY KEY CLUSTERED ([ParcelRelocationId] ASC)
);


GO
PRINT N'Creating Table [Austin].[Relocation_Activity_Type]...';


GO
CREATE TABLE [Austin].[Relocation_Activity_Type] (
    [ActivityTypeCode]    NVARCHAR (20)  NOT NULL,
    [Description]         NVARCHAR (200) NULL,
    [DisplayOrder]        INT            NOT NULL,
    [IsActive]            BIT            NOT NULL,
    [TrackSent]           BIT            NOT NULL,
    [TrackDelivered]      BIT            NOT NULL,
    [TrackSentConsultant] BIT            NOT NULL,
    [TrackSentClient]     BIT            NOT NULL,
    [TrackClientApproval] BIT            NOT NULL,
    [IncludeYesNo]        BIT            NOT NULL,
    [IncludeMoney]        BIT            NOT NULL,
    CONSTRAINT [PK_Austin.Relocation_Activity_Type] PRIMARY KEY CLUSTERED ([ActivityTypeCode] ASC)
);


GO
PRINT N'Creating Table [Austin].[Relocation_Case]...';


GO
CREATE TABLE [Austin].[Relocation_Case] (
    [RelocationCaseId]   UNIQUEIDENTIFIER NOT NULL,
    [ParentRelocationId] UNIQUEIDENTIFIER NOT NULL,
    [AgentId]            UNIQUEIDENTIFIER NULL,
    [RelocationNumber]   INT              NOT NULL,
    [Status]             INT              NOT NULL,
    [DisplaceeType]      INT              NOT NULL,
    [RelocationType]     INT              NOT NULL,
    [DisplaceeName]      NVARCHAR (200)   NULL,
    [ContactInfoId]      UNIQUEIDENTIFIER NULL,
    CONSTRAINT [PK_Austin.Relocation_Case] PRIMARY KEY CLUSTERED ([RelocationCaseId] ASC)
);


GO
PRINT N'Creating Table [Austin].[Relocation_Displacee_Activity]...';


GO
CREATE TABLE [Austin].[Relocation_Displacee_Activity] (
    [ActivityId]          UNIQUEIDENTIFIER   NOT NULL,
    [CaseId]              UNIQUEIDENTIFIER   NOT NULL,
    [ActivityCode]        NVARCHAR (20)      NULL,
    [Activity]            INT                NOT NULL,
    [ActivityDescription] NVARCHAR (MAX)     NULL,
    [AgentId]             UNIQUEIDENTIFIER   NOT NULL,
    [ActivityDate]        DATETIMEOFFSET (7) NOT NULL,
    [Notes]               NVARCHAR (MAX)     NULL,
    [MoneyValue]          MONEY              NULL,
    [BooleanValue]        BIT                NULL,
    CONSTRAINT [PK_Austin.Relocation_Displacee_Activity] PRIMARY KEY CLUSTERED ([ActivityId] ASC)
);


GO
PRINT N'Creating Table [Austin].[Relocation_Eligibility]...';


GO
CREATE TABLE [Austin].[Relocation_Eligibility] (
    [ActivityId]     UNIQUEIDENTIFIER   NOT NULL,
    [CaseId]         UNIQUEIDENTIFIER   NOT NULL,
    [OriginalStatus] INT                NOT NULL,
    [NewStatus]      INT                NOT NULL,
    [ActivityDate]   DATETIMEOFFSET (7) NOT NULL,
    [AgentId]        UNIQUEIDENTIFIER   NOT NULL,
    [Notes]          NVARCHAR (400)     NULL,
    CONSTRAINT [PK_Austin.Relocation_Eligibility] PRIMARY KEY CLUSTERED ([ActivityId] ASC)
);


GO
PRINT N'Creating Table [SH72].[Negotiation_History]...';


GO
CREATE TABLE [SH72].[Negotiation_History] (
    [NegotiationId]       UNIQUEIDENTIFIER   NOT NULL,
    [Contact_Date]        DATETIMEOFFSET (7) NOT NULL,
    [Offer_Amount]        MONEY              NULL,
    [CounterOffer_Amount] MONEY              NULL,
    [IsOffer]             BIT                NULL,
    [OwnerId]             UNIQUEIDENTIFIER   NOT NULL,
    [ContactId]           UNIQUEIDENTIFIER   NULL,
    [Contact_Person_Name] NVARCHAR (100)     NULL,
    [Contact_Number]      NVARCHAR (50)      NULL,
    [Contact_Method]      NVARCHAR (50)      NULL,
    [NegotiatorId]        UNIQUEIDENTIFIER   NULL,
    [Negotator_Name]      NVARCHAR (100)     NOT NULL,
    [Notes]               NVARCHAR (MAX)     NULL,
    [Action]              NVARCHAR (MAX)     NULL,
    [Created]             DATETIMEOFFSET (7) NOT NULL,
    [LastModified]        DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]          NVARCHAR (50)      NOT NULL,
    CONSTRAINT [PK_Negotiation_History] PRIMARY KEY CLUSTERED ([NegotiationId] ASC)
);


GO
PRINT N'Creating Table [SH72].[NegotiationContacts]...';


GO
CREATE TABLE [SH72].[NegotiationContacts] (
    [NegotiationContactId] UNIQUEIDENTIFIER NOT NULL,
    [NegotiationId]        UNIQUEIDENTIFIER NOT NULL,
    [ContactInfoId]        UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_NegotiationContacts] PRIMARY KEY CLUSTERED ([NegotiationContactId] ASC)
);


GO
PRINT N'Creating Table [SH72].[NegotiationDocuments]...';


GO
CREATE TABLE [SH72].[NegotiationDocuments] (
    [NegotiationDocumentId] UNIQUEIDENTIFIER NOT NULL,
    [NegotiationId]         UNIQUEIDENTIFIER NOT NULL,
    [DocumentId]            UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_NegotiationDocuments] PRIMARY KEY CLUSTERED ([NegotiationDocumentId] ASC)
);


GO
PRINT N'Creating Table [SH72].[NegotiationParcels]...';


GO
CREATE TABLE [SH72].[NegotiationParcels] (
    [NegotiationParcelId] UNIQUEIDENTIFIER NOT NULL,
    [NegotiationId]       UNIQUEIDENTIFIER NOT NULL,
    [ParcelId]            UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_NegotiationParcels] PRIMARY KEY CLUSTERED ([NegotiationParcelId] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Action_Item]...';


GO
CREATE TABLE [ROWM].[Action_Item] (
    [ActionItemId] UNIQUEIDENTIFIER   ROWGUIDCOL NOT NULL,
    [ActivityId]   UNIQUEIDENTIFIER   NOT NULL,
    [Action]       NVARCHAR (MAX)     NOT NULL,
    [DueDate]      DATETIMEOFFSET (7) NOT NULL,
    [Status]       INT                NOT NULL,
    [Created]      DATETIMEOFFSET (7) NOT NULL,
    [LastModified] DATETIMEOFFSET (7) NOT NULL,
    [ModifiedBy]   NVARCHAR (50)      NOT NULL,
    CONSTRAINT [PK_Action_Item] PRIMARY KEY CLUSTERED ([ActionItemId] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Appraisal]...';


GO
CREATE TABLE [ROWM].[Appraisal] (
    [Appraisal_Id]           UNIQUEIDENTIFIER ROWGUIDCOL NOT NULL,
    [ParcelId]               UNIQUEIDENTIFIER NOT NULL,
    [Appraiser]              NVARCHAR (200)   NOT NULL,
    [Appraisal_Firm]         NVARCHAR (200)   NULL,
    [Appraisal_Date]         DATE             NOT NULL,
    [Report_Date]            DATE             NULL,
    [Report_Id]              UNIQUEIDENTIFIER NULL,
    [Appraised_Value]        MONEY            NULL,
    [Appraised_Value_Type]   NVARCHAR (200)   NULL,
    [Appraised_Acrage]       FLOAT (53)       NULL,
    [Appraisal_Conditions]   NVARCHAR (MAX)   NULL,
    [AgentId]                UNIQUEIDENTIFIER NULL,
    [Reviewer]               NVARCHAR (MAX)   NULL,
    [Reviewer_Approval_Date] DATE             NULL,
    CONSTRAINT [PK_Appraisal] PRIMARY KEY CLUSTERED ([Appraisal_Id] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Parcel_Node]...';


GO
CREATE TABLE [ROWM].[Parcel_Node] (
    [ParcelId]               UNIQUEIDENTIFIER NOT NULL,
    [Assessor_Parcel_Number] NVARCHAR (128)   NOT NULL,
    INDEX [GRAPH_UNIQUE_INDEX_FF7101B7F742449A8444C413B9238977] UNIQUE NONCLUSTERED ($node_id)
) AS NODE;


GO
PRINT N'Creating Table [ROWM].[Preferred_Contact_Mode]...';


GO
CREATE TABLE [ROWM].[Preferred_Contact_Mode] (
    [Mode]         NVARCHAR (10)  NOT NULL,
    [Description]  NVARCHAR (MAX) NULL,
    [DisplayOrder] INT            NOT NULL,
    [IsActive]     BIT            NOT NULL,
    CONSTRAINT [PK__Preferre__2488AC273F1BD714] PRIMARY KEY CLUSTERED ([Mode] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Representation_Type]...';


GO
CREATE TABLE [ROWM].[Representation_Type] (
    [RelationTypeCode] NVARCHAR (20) NOT NULL,
    [Description]      NVARCHAR (20) NOT NULL,
    [DisplayOrder]     INT           NOT NULL,
    [IsActive]         BIT           NOT NULL,
    CONSTRAINT [PK_ROWM.Repesentation_Type] PRIMARY KEY CLUSTERED ([RelationTypeCode] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Status_Activity]...';


GO
CREATE TABLE [ROWM].[Status_Activity] (
    [ActivityId]         UNIQUEIDENTIFIER   NOT NULL,
    [ActivityDate]       DATETIMEOFFSET (7) NOT NULL,
    [ParentParcelId]     UNIQUEIDENTIFIER   NOT NULL,
    [AgentId]            UNIQUEIDENTIFIER   NOT NULL,
    [StatusCode]         VARCHAR (50)       NOT NULL,
    [OriginalStatusCode] VARCHAR (50)       NULL,
    [Notes]              NVARCHAR (MAX)     NULL,
    CONSTRAINT [PK_Status_Activity] PRIMARY KEY CLUSTERED ([ActivityId] ASC)
);


GO
PRINT N'Creating Table [ROWM].[Status_Category]...';


GO
CREATE TABLE [ROWM].[Status_Category] (
    [CategoryCode] VARCHAR (50)   NOT NULL,
    [Description]  NVARCHAR (MAX) NULL,
    [DisplayOrder] INT            NULL,
    [IsActive]     BIT            NOT NULL,
    CONSTRAINT [PK_Status_Category] PRIMARY KEY CLUSTERED ([CategoryCode] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [ROWM].[RoeConditions]...';


GO
ALTER TABLE [ROWM].[RoeConditions]
    ADD DEFAULT (newid()) FOR [ConditionId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [Austin].[Parcel_Relocation]...';


GO
ALTER TABLE [Austin].[Parcel_Relocation]
    ADD DEFAULT (newsequentialid()) FOR [ParcelRelocationId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [Austin].[Relocation_Case]...';


GO
ALTER TABLE [Austin].[Relocation_Case]
    ADD DEFAULT (newsequentialid()) FOR [RelocationCaseId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [Austin].[Relocation_Displacee_Activity]...';


GO
ALTER TABLE [Austin].[Relocation_Displacee_Activity]
    ADD DEFAULT (newsequentialid()) FOR [ActivityId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [Austin].[Relocation_Eligibility]...';


GO
ALTER TABLE [Austin].[Relocation_Eligibility]
    ADD DEFAULT (newsequentialid()) FOR [ActivityId];


GO
PRINT N'Creating Default Constraint [SH72].[DF_Negotiation_History_Created]...';


GO
ALTER TABLE [SH72].[Negotiation_History]
    ADD CONSTRAINT [DF_Negotiation_History_Created] DEFAULT (getdate()) FOR [Created];


GO
PRINT N'Creating Default Constraint [SH72].[DF_Negotiation_History_LastModified]...';


GO
ALTER TABLE [SH72].[Negotiation_History]
    ADD CONSTRAINT [DF_Negotiation_History_LastModified] DEFAULT (getdate()) FOR [LastModified];


GO
PRINT N'Creating Default Constraint [SH72].[DF_Negotiation_History_NegotiationId]...';


GO
ALTER TABLE [SH72].[Negotiation_History]
    ADD CONSTRAINT [DF_Negotiation_History_NegotiationId] DEFAULT (newid()) FOR [NegotiationId];


GO
PRINT N'Creating Default Constraint [SH72].[DF_NegotiationContacts_NegotiationContactId]...';


GO
ALTER TABLE [SH72].[NegotiationContacts]
    ADD CONSTRAINT [DF_NegotiationContacts_NegotiationContactId] DEFAULT (newid()) FOR [NegotiationContactId];


GO
PRINT N'Creating Default Constraint [SH72].[DF_NegotiationDocuments_NegotiationDocumentId]...';


GO
ALTER TABLE [SH72].[NegotiationDocuments]
    ADD CONSTRAINT [DF_NegotiationDocuments_NegotiationDocumentId] DEFAULT (newid()) FOR [NegotiationDocumentId];


GO
PRINT N'Creating Default Constraint [SH72].[DF_NegotiationParcels_NegotiationParcelId]...';


GO
ALTER TABLE [SH72].[NegotiationParcels]
    ADD CONSTRAINT [DF_NegotiationParcels_NegotiationParcelId] DEFAULT (newid()) FOR [NegotiationParcelId];


GO
PRINT N'Creating Default Constraint [ROWM].[DF_Action_Item_ActionItemId]...';


GO
ALTER TABLE [ROWM].[Action_Item]
    ADD CONSTRAINT [DF_Action_Item_ActionItemId] DEFAULT (newid()) FOR [ActionItemId];


GO
PRINT N'Creating Default Constraint [ROWM].[DF_Table_1_Apprisal_Id]...';


GO
ALTER TABLE [ROWM].[Appraisal]
    ADD CONSTRAINT [DF_Table_1_Apprisal_Id] DEFAULT (newid()) FOR [Appraisal_Id];


GO
PRINT N'Creating Default Constraint [ROWM].[DF_Status_Activity_ActivityId]...';


GO
ALTER TABLE [ROWM].[Status_Activity]
    ADD CONSTRAINT [DF_Status_Activity_ActivityId] DEFAULT (newid()) FOR [ActivityId];


GO
PRINT N'Creating Default Constraint [ROWM].[DF__ContactIn__IsDel__01142BA1]...';


GO
ALTER TABLE [ROWM].[ContactInfo]
    ADD CONSTRAINT [DF__ContactIn__IsDel__01142BA1] DEFAULT ((0)) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint [ROWM].[DF__ContactLo__IsDel__1B29035F]...';


GO
ALTER TABLE [ROWM].[ContactLog]
    ADD CONSTRAINT [DF__ContactLo__IsDel__1B29035F] DEFAULT ((0)) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint [ROWM].[DF__Document__IsDele__6754599E]...';


GO
ALTER TABLE [ROWM].[Document]
    ADD CONSTRAINT [DF__Document__IsDele__6754599E] DEFAULT ((0)) FOR [IsDeleted];


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.ContactLog_ROWM.Agent_ContactAgentId]...';


GO
ALTER TABLE [ROWM].[ContactLog] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.ContactLog_ROWM.Agent_ContactAgentId] FOREIGN KEY ([ContactAgentId]) REFERENCES [ROWM].[Agent] ([AgentId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.DocumentActivity_ROWM.Agent_AgentId]...';


GO
ALTER TABLE [ROWM].[DocumentActivity] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.DocumentActivity_ROWM.Agent_AgentId] FOREIGN KEY ([AgentId]) REFERENCES [ROWM].[Agent] ([AgentId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.DocumentAgents_ROWM.Agent_Agent_AgentId]...';


GO
ALTER TABLE [ROWM].[DocumentAgents] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.DocumentAgents_ROWM.Agent_Agent_AgentId] FOREIGN KEY ([Agent_AgentId]) REFERENCES [ROWM].[Agent] ([AgentId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.Contact_Purpose_ROWM.Parcel_Status_MilestoneCode]...';


GO
ALTER TABLE [ROWM].[Contact_Purpose] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.Contact_Purpose_ROWM.Parcel_Status_MilestoneCode] FOREIGN KEY ([MilestoneCode]) REFERENCES [ROWM].[Parcel_Status] ([Code]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.Parcel_ROWM.Parcel_Status_ParcelStatusCode]...';


GO
ALTER TABLE [ROWM].[Parcel] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.Parcel_ROWM.Parcel_Status_ParcelStatusCode] FOREIGN KEY ([ParcelStatusCode]) REFERENCES [ROWM].[Parcel_Status] ([Code]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ROWM.Document_Type_ROWM.Parcel_Status_MilestoneCode]...';


GO
ALTER TABLE [ROWM].[Document_Type] WITH NOCHECK
    ADD CONSTRAINT [FK_ROWM.Document_Type_ROWM.Parcel_Status_MilestoneCode] FOREIGN KEY ([MilestoneCode]) REFERENCES [ROWM].[Parcel_Status] ([Code]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Parcel_Status_Milestone]...';


GO
ALTER TABLE [ROWM].[Parcel_Status] WITH NOCHECK
    ADD CONSTRAINT [FK_Parcel_Status_Milestone] FOREIGN KEY ([Code]) REFERENCES [ROWM].[Parcel_Status] ([Code]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Parcel_Status_Category]...';


GO
ALTER TABLE [ROWM].[Parcel_Status] WITH NOCHECK
    ADD CONSTRAINT [FK_Parcel_Status_Category] FOREIGN KEY ([Category]) REFERENCES [ROWM].[Status_Category] ([CategoryCode]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [Austin].[FK_Austin.Relocation_Case_Austin.Parcel_Relocation_ParentRelocationId]...';


GO
ALTER TABLE [Austin].[Relocation_Case] WITH NOCHECK
    ADD CONSTRAINT [FK_Austin.Relocation_Case_Austin.Parcel_Relocation_ParentRelocationId] FOREIGN KEY ([ParentRelocationId]) REFERENCES [Austin].[Parcel_Relocation] ([ParcelRelocationId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [Austin].[FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Activity_Type_ActivityCode]...';


GO
ALTER TABLE [Austin].[Relocation_Displacee_Activity] WITH NOCHECK
    ADD CONSTRAINT [FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Activity_Type_ActivityCode] FOREIGN KEY ([ActivityCode]) REFERENCES [Austin].[Relocation_Activity_Type] ([ActivityTypeCode]);


GO
PRINT N'Creating Foreign Key [Austin].[FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Case_CaseId]...';


GO
ALTER TABLE [Austin].[Relocation_Displacee_Activity] WITH NOCHECK
    ADD CONSTRAINT [FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Case_CaseId] FOREIGN KEY ([CaseId]) REFERENCES [Austin].[Relocation_Case] ([RelocationCaseId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [Austin].[FK_Austin.Relocation_Eligibility_Austin.Relocation_Case_CaseId]...';


GO
ALTER TABLE [Austin].[Relocation_Eligibility] WITH NOCHECK
    ADD CONSTRAINT [FK_Austin.Relocation_Eligibility_Austin.Relocation_Case_CaseId] FOREIGN KEY ([CaseId]) REFERENCES [Austin].[Relocation_Case] ([RelocationCaseId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [SH72].[FK_Negotiation_History_Agent]...';


GO
ALTER TABLE [SH72].[Negotiation_History] WITH NOCHECK
    ADD CONSTRAINT [FK_Negotiation_History_Agent] FOREIGN KEY ([NegotiatorId]) REFERENCES [ROWM].[Agent] ([AgentId]);


GO
PRINT N'Creating Foreign Key [SH72].[FK_Negotiation_History_ContactInfo]...';


GO
ALTER TABLE [SH72].[Negotiation_History] WITH NOCHECK
    ADD CONSTRAINT [FK_Negotiation_History_ContactInfo] FOREIGN KEY ([ContactId]) REFERENCES [ROWM].[ContactInfo] ([ContactId]);


GO
PRINT N'Creating Foreign Key [SH72].[FK_Negotiation_History_Owner]...';


GO
ALTER TABLE [SH72].[Negotiation_History] WITH NOCHECK
    ADD CONSTRAINT [FK_Negotiation_History_Owner] FOREIGN KEY ([OwnerId]) REFERENCES [ROWM].[Owner] ([OwnerId]);


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationContacts_ContactInfo]...';


GO
ALTER TABLE [SH72].[NegotiationContacts] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationContacts_ContactInfo] FOREIGN KEY ([ContactInfoId]) REFERENCES [ROWM].[ContactInfo] ([ContactId]);


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationContacts_Negotiation_History]...';


GO
ALTER TABLE [SH72].[NegotiationContacts] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationContacts_Negotiation_History] FOREIGN KEY ([NegotiationId]) REFERENCES [SH72].[Negotiation_History] ([NegotiationId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationDocuments_Document]...';


GO
ALTER TABLE [SH72].[NegotiationDocuments] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationDocuments_Document] FOREIGN KEY ([DocumentId]) REFERENCES [ROWM].[Document] ([DocumentId]);


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationDocuments_Negotiation_History]...';


GO
ALTER TABLE [SH72].[NegotiationDocuments] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationDocuments_Negotiation_History] FOREIGN KEY ([NegotiationId]) REFERENCES [SH72].[Negotiation_History] ([NegotiationId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationParcels_Negotiation_History]...';


GO
ALTER TABLE [SH72].[NegotiationParcels] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationParcels_Negotiation_History] FOREIGN KEY ([NegotiationId]) REFERENCES [SH72].[Negotiation_History] ([NegotiationId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [SH72].[FK_NegotiationParcels_Parcel]...';


GO
ALTER TABLE [SH72].[NegotiationParcels] WITH NOCHECK
    ADD CONSTRAINT [FK_NegotiationParcels_Parcel] FOREIGN KEY ([ParcelId]) REFERENCES [ROWM].[Parcel] ([ParcelId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_ACTION_ITEM]...';


GO
ALTER TABLE [ROWM].[Action_Item] WITH NOCHECK
    ADD CONSTRAINT [FK_ACTION_ITEM] FOREIGN KEY ([ActivityId]) REFERENCES [ROWM].[Status_Activity] ([ActivityId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Appraisal_Agent]...';


GO
ALTER TABLE [ROWM].[Appraisal] WITH NOCHECK
    ADD CONSTRAINT [FK_Appraisal_Agent] FOREIGN KEY ([AgentId]) REFERENCES [ROWM].[Agent] ([AgentId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Appraisal_DocumentPackage]...';


GO
ALTER TABLE [ROWM].[Appraisal] WITH NOCHECK
    ADD CONSTRAINT [FK_Appraisal_DocumentPackage] FOREIGN KEY ([Report_Id]) REFERENCES [ROWM].[DocumentPackage] ([PackageId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Appraisal_Parcel]...';


GO
ALTER TABLE [ROWM].[Appraisal] WITH NOCHECK
    ADD CONSTRAINT [FK_Appraisal_Parcel] FOREIGN KEY ([ParcelId]) REFERENCES [ROWM].[Parcel] ([ParcelId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Status_Activity_Agent]...';


GO
ALTER TABLE [ROWM].[Status_Activity] WITH NOCHECK
    ADD CONSTRAINT [FK_Status_Activity_Agent] FOREIGN KEY ([AgentId]) REFERENCES [ROWM].[Agent] ([AgentId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_MODE]...';


GO
ALTER TABLE [ROWM].[ContactInfo] WITH NOCHECK
    ADD CONSTRAINT [FK_MODE] FOREIGN KEY ([PreferredContactMode]) REFERENCES [ROWM].[Preferred_Contact_Mode] ([Mode]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Document_Document]...';


GO
ALTER TABLE [ROWM].[Document] WITH NOCHECK
    ADD CONSTRAINT [FK_Document_Document] FOREIGN KEY ([DocumentId]) REFERENCES [ROWM].[Document] ([DocumentId]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_Document_Document_Type]...';


GO
ALTER TABLE [ROWM].[Document] WITH NOCHECK
    ADD CONSTRAINT [FK_Document_Document_Type] FOREIGN KEY ([DocumentType]) REFERENCES [ROWM].[Document_Type] ([DocTypeName]);


GO
PRINT N'Creating Foreign Key [ROWM].[FK_CONDITIONS_CONTACTINFO]...';


GO
ALTER TABLE [ROWM].[RoeConditions] WITH NOCHECK
    ADD CONSTRAINT [FK_CONDITIONS_CONTACTINFO] FOREIGN KEY ([Contact]) REFERENCES [ROWM].[ContactInfo] ([ContactId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [ROWM].[ContactLog] WITH CHECK CHECK CONSTRAINT [FK_ROWM.ContactLog_ROWM.Agent_ContactAgentId];

ALTER TABLE [ROWM].[DocumentActivity] WITH CHECK CHECK CONSTRAINT [FK_ROWM.DocumentActivity_ROWM.Agent_AgentId];

ALTER TABLE [ROWM].[DocumentAgents] WITH CHECK CHECK CONSTRAINT [FK_ROWM.DocumentAgents_ROWM.Agent_Agent_AgentId];

ALTER TABLE [ROWM].[Contact_Purpose] WITH CHECK CHECK CONSTRAINT [FK_ROWM.Contact_Purpose_ROWM.Parcel_Status_MilestoneCode];

ALTER TABLE [ROWM].[Parcel] WITH CHECK CHECK CONSTRAINT [FK_ROWM.Parcel_ROWM.Parcel_Status_ParcelStatusCode];

ALTER TABLE [ROWM].[Document_Type] WITH CHECK CHECK CONSTRAINT [FK_ROWM.Document_Type_ROWM.Parcel_Status_MilestoneCode];

ALTER TABLE [ROWM].[Parcel_Status] WITH CHECK CHECK CONSTRAINT [FK_Parcel_Status_Milestone];

ALTER TABLE [ROWM].[Parcel_Status] WITH CHECK CHECK CONSTRAINT [FK_Parcel_Status_Category];

ALTER TABLE [Austin].[Relocation_Case] WITH CHECK CHECK CONSTRAINT [FK_Austin.Relocation_Case_Austin.Parcel_Relocation_ParentRelocationId];

ALTER TABLE [Austin].[Relocation_Displacee_Activity] WITH CHECK CHECK CONSTRAINT [FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Activity_Type_ActivityCode];

ALTER TABLE [Austin].[Relocation_Displacee_Activity] WITH CHECK CHECK CONSTRAINT [FK_Austin.Relocation_Displacee_Activity_Austin.Relocation_Case_CaseId];

ALTER TABLE [Austin].[Relocation_Eligibility] WITH CHECK CHECK CONSTRAINT [FK_Austin.Relocation_Eligibility_Austin.Relocation_Case_CaseId];

ALTER TABLE [SH72].[Negotiation_History] WITH CHECK CHECK CONSTRAINT [FK_Negotiation_History_Agent];

ALTER TABLE [SH72].[Negotiation_History] WITH CHECK CHECK CONSTRAINT [FK_Negotiation_History_ContactInfo];

ALTER TABLE [SH72].[Negotiation_History] WITH CHECK CHECK CONSTRAINT [FK_Negotiation_History_Owner];

ALTER TABLE [SH72].[NegotiationContacts] WITH CHECK CHECK CONSTRAINT [FK_NegotiationContacts_ContactInfo];

ALTER TABLE [SH72].[NegotiationContacts] WITH CHECK CHECK CONSTRAINT [FK_NegotiationContacts_Negotiation_History];

ALTER TABLE [SH72].[NegotiationDocuments] WITH CHECK CHECK CONSTRAINT [FK_NegotiationDocuments_Document];

ALTER TABLE [SH72].[NegotiationDocuments] WITH CHECK CHECK CONSTRAINT [FK_NegotiationDocuments_Negotiation_History];

ALTER TABLE [SH72].[NegotiationParcels] WITH CHECK CHECK CONSTRAINT [FK_NegotiationParcels_Negotiation_History];

ALTER TABLE [SH72].[NegotiationParcels] WITH CHECK CHECK CONSTRAINT [FK_NegotiationParcels_Parcel];

ALTER TABLE [ROWM].[Action_Item] WITH CHECK CHECK CONSTRAINT [FK_ACTION_ITEM];

ALTER TABLE [ROWM].[Appraisal] WITH CHECK CHECK CONSTRAINT [FK_Appraisal_Agent];

ALTER TABLE [ROWM].[Appraisal] WITH CHECK CHECK CONSTRAINT [FK_Appraisal_DocumentPackage];

ALTER TABLE [ROWM].[Appraisal] WITH CHECK CHECK CONSTRAINT [FK_Appraisal_Parcel];

ALTER TABLE [ROWM].[Status_Activity] WITH CHECK CHECK CONSTRAINT [FK_Status_Activity_Agent];

ALTER TABLE [ROWM].[ContactInfo] WITH CHECK CHECK CONSTRAINT [FK_MODE];

ALTER TABLE [ROWM].[Document] WITH CHECK CHECK CONSTRAINT [FK_Document_Document];

ALTER TABLE [ROWM].[Document] WITH CHECK CHECK CONSTRAINT [FK_Document_Document_Type];

ALTER TABLE [ROWM].[RoeConditions] WITH CHECK CHECK CONSTRAINT [FK_CONDITIONS_CONTACTINFO];


GO
PRINT N'Update complete.';


GO
